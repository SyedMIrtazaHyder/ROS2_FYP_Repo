<?xml version="1.0" ?>
<robot name="FYP_car" xmlns:xacro="http://ros.org/wiki/xacro">
	<xacro:include filename="wheel.xacro" />
	<xacro:include filename="ackermann_joints.xacro" />

	<xacro:property name="ground_clearance" value="0.13" />
	<xacro:property name="chassis_height" value="1.5" />
	<xacro:property name="chassis_width_top" value="1.0" />
	<xacro:property name="chassis_width_bottom" value="0.80" />
	<xacro:property name="chassis_length" value="2.6" />
	<xacro:property name="arc_distance" value="0.05" />
	<xacro:property name="front_wheel_to_center" value="0.45" />
	<xacro:property name="rear_wheel_to_center" value="0.65" />

	<link name = "base_link" />

	<joint name="chassis_joint" type="fixed">
		<parent link="base_link" />
		<child link="chassis_link" />
		<origin xyz="0 0 ${ground_clearance}"/>
	</joint>

	<link name="chassis_link">
		<visual>
			<!-- <origin xyz="0 ${-chassis_width_top/3} ${chassis_height/2}" rpy="${pi/2} 0 ${pi/2}"/> -->
			<origin xyz="0 0 ${chassis_height/2}" />
			<geometry>
				<!-- <mesh filename="package://car_model/meshes/chassis.stl" scale="0.002 0.001 0.001"/> -->
				<box size="${chassis_length} ${chassis_width_bottom} ${chassis_height}"/>
			</geometry>
			<material name="grey">
				<color rgba="0.5 0.5 0.5 0.8" />
			</material>
		</visual>
		<!--
		<visual>
			<origin xyz="${chassis_length/4} 0 ${chassis_height/2}" />
			<geometry>
				<box size="${chassis_length/2 - arc_distance} ${chassis_width_top} ${chassis_height}"/>
			</geometry>
		</visual>
		<visual>
			<origin xyz="${-chassis_length/4} 0 ${chassis_height/2}" />
			<geometry>
				<box size="1.35 0.8 1.5"/>
			</geometry>
		</visual>
		-->
		<collision>
			<origin xyz="0 0 ${chassis_height/2}" />
			<geometry>
				<box size="${chassis_length} ${chassis_width_bottom} ${chassis_height}"/>
			</geometry>
		</collision>
		<inertial>
			<mass value="100" />
			<origin xyz="0 0 ${chassis_height/2}" />
			<inertia ixx="${(chassis_length*chassis_length + chassis_height*chassis_height)*100/12}" ixy="0" ixz="0" iyy="${(chassis_width_bottom*chassis_width_bottom + chassis_height*chassis_height)*100/12}" iyz="0" izz="${(chassis_width_bottom*chassis_width_bottom + chassis_length*chassis_length)*100/12}"/>
		</inertial>
	</link>

	<xacro:ackermann_joint suffix="front_left">
		<origin xyz="${front_wheel_to_center + radius} ${chassis_width_top/2} ${radius - ground_clearance}" rpy="0 0 0"/>
	</xacro:ackermann_joint>
	<xacro:wheel suffix="front" direction="left" parent="front_left_wheel_steering_link">
		<origin xyz="0 ${thickness} 0" rpy="${-pi/2} 0 0"/>
	</xacro:wheel>

	<xacro:ackermann_joint suffix="front_right">
		<origin xyz="${front_wheel_to_center + radius} ${-chassis_width_top/2} ${radius - ground_clearance}" rpy="0 0 0"/>
	</xacro:ackermann_joint>
	<xacro:wheel suffix="front" direction="right" parent="front_right_wheel_steering_link">
		<origin xyz="0 ${-thickness} 0" rpy="${pi/2} 0 0"/>
	</xacro:wheel>

	<xacro:wheel suffix="rear" direction="left" parent="chassis_link">
		<origin xyz="${-(rear_wheel_to_center + radius)} ${chassis_width_bottom/2 + thickness} ${radius - ground_clearance}" rpy="${-pi/2} 0 0"/>
	</xacro:wheel>
	
	<xacro:wheel suffix="rear" direction="right" parent="chassis_link">
		<origin xyz="${-(rear_wheel_to_center + radius)} ${-(chassis_width_bottom/2 + thickness)} ${radius - ground_clearance}" rpy="${pi/2} 0 0"/>
	</xacro:wheel>

	<xacro:include filename="controller.xacro" />
</robot>
